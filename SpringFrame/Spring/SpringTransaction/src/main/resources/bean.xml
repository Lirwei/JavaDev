<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
<!--

    <context:component-scan base-package="per.study"/>

    <bean class="per.study.service.impl.AccountServiceImpl" id="accountService">
        <property name="accountDao" ref="accountDao"/>
    </bean>

    <bean id="accountDao" class="per.study.dao.impl.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://106.55.32.253:3306/test?useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="qwe@123"/>
    </bean>

    &lt;!&ndash;Spring基于XML的声明事务控制配置步骤
        1.配置事务管理器
        2.配置事务通知
        3.配置切入点表达式
        4.建立事务通知和切入点表达式的对应关系
        5.配置事务的属性
    &ndash;&gt;
    &lt;!&ndash;配置事务管理器&ndash;&gt;
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
        &lt;!&ndash;
            isolation：用于指定事务的隔离级别，默认"DEFAULT"，表示使用数据库的默认级别
            propagation：用于指定事务的传播行为，默认"REQUIRED"，表示一定有会有事务，增删改的选择。查询方法可以为SUPPORTS
            read-only：用于指定事务是否只读，只有查询方法才能设置为true，默认值为false，表示读写
            timeout：用于指定事务的超时时间，默认值为-1，表明永不超时；如果指定了数值，以秒为单位
            rollback-for：用于指定一个异常，当产生该异常时，事务回滚，产生其他异常时，事务不回滚，没有默认值，表示任何异常都回滚
            no-rollback-for：用于指定一个异常，当产生该异常时，事务不回滚，产生其他异常时，事务回滚，没有默认值，表示任何异常都回滚
        &ndash;&gt;
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pt1" expression="execution( * per.study.dao.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"/>
    </aop:config>
-->

</beans>